<% layout('layouts/boilerplate') %>
<%- include('../partials/headerStatus_dev') %>
<div class="mt-16"></div>
<div class="m-8">
  <% data2.forEach((item, index) => { 
      // Determine the alert type based on status
      let alertTypeClass = 'text-blue-800 border-blue-300 bg-blue-50 dark:text-blue-400 dark:border-blue-800';
      let alertHeading = 'Info Alert';
      let iconPath = 'M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z';
      
      if (item.status === 'Warning') {
        alertTypeClass = 'text-yellow-800 border-yellow-400 bg-yellow-50 dark:text-yellow-400 dark:border-yellow-800';
        alertHeading = 'Warning Alert';
      } else if (item.status === 'Danger') {
        alertTypeClass = 'text-red-800 border-red-400 bg-red-50 dark:text-red-400 dark:border-red-800';
        alertHeading = 'Danger Alert';
      }
  %>
    <!-- Alert Box -->
    <div class="max-w-2xl p-4 mb-4 mx-auto border rounded-lg alert-item <%= alertTypeClass %>" role="alert">
      <div class="flex items-center mb-3">
        <svg class="flex-shrink-0 w-5 h-5 mr-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
          <path d="<%= iconPath %>"/>
        </svg>
        <h3 class="text-lg font-semibold"><%= alertHeading %></h3>
      </div>
      <div class="grid grid-cols-2 gap-4 text-sm mb-4">
        <div>
          <h3 class="text-base font-medium">Temperature: <%= item.tempC.toFixed(1) %>Â°C</h3>
        </div>
        <div>
          <h3 class="text-base font-medium">Water Level: <%= item.distance %> cm</h3>
        </div>
        <div>
          <h3 class="text-base font-medium">Humidity: <%= item.humidity %>%</h3>
        </div>
        <div>
          <h3 class="text-base font-medium">Rain Status: <%= item.status %></h3>
        </div>
      </div>
      <div class="flex justify-between items-center text-sm">
        <h3 class="font-small">Location: <%= item.location %></h3>
        <h3 class="font-small text-right">
          <%= new Date(new Date(item.mongoDBtime).getTime() - (8 * 60 * 60 * 1000)).toLocaleString() %>
        </h3>
        
      </div>
    </div>
  <% }); %>
</div>

<!-- Pagination Controls -->
<div id="pagination-controls" class="flex justify-center mt-4 mb-16">
    <button id="first-page" class="px-4 py-2 bg-gray-300 rounded-lg" ${currentPage === 1 ? 'disabled' : ''}>First</button>
    <span id="page-info" class="mx-4">Page 1</span>
    <!-- Page buttons will be dynamically inserted here -->
    <button id="last-page" class="px-4 py-2 bg-gray-300 rounded-lg" ${currentPage === totalPages ? 'disabled' : ''}>Last</button>
</div>



<script>
  $(document).ready(function() {
    const itemsPerPage = 20; // Number of items per page
    const $dataItems = $('.alert-item'); // Ensure this class matches your HTML
    const totalPages = Math.ceil($dataItems.length / itemsPerPage);
    let currentPage = 1;

    function createPaginationControls() {
        const $paginationControls = $('#pagination-controls');
        $paginationControls.empty();
        
        const firstButton = `<button id="first-page" class="px-4 py-2 bg-gray-300 rounded-lg" ${currentPage === 1 ? 'disabled' : ''}>First</button>`;
        $paginationControls.append(firstButton);

        const startPage = Math.max(1, currentPage - 2); // Start page
        const endPage = Math.min(totalPages, currentPage + 2); // End page

        // Display page buttons
        for (let i = startPage; i <= endPage; i++) {
            const pageButton = `<button class="page-number px-4 py-2 ${i === currentPage ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-800'} rounded-lg" data-page="${i}">${i}</button>`;
            $paginationControls.append(pageButton);
        }
        
        const lastButton = `<button id="last-page" class="px-4 py-2 bg-gray-300 rounded-lg" ${currentPage === totalPages ? 'disabled' : ''}>Last</button>`;
        $paginationControls.append(lastButton);

        // Update page info
        $('#page-info').text(`Page ${currentPage}`);
    }

    function showPage(page) {
        $dataItems.addClass('hidden');
        $dataItems.slice((page - 1) * itemsPerPage, page * itemsPerPage).removeClass('hidden');
        currentPage = page;
        createPaginationControls();
    }

    $(document).on('click', '#first-page', function() {
        if (currentPage > 1) {
            showPage(1);
        }
    });

    $(document).on('click', '#last-page', function() {
        if (currentPage < totalPages) {
            showPage(totalPages);
        }
    });

    $(document).on('click', '.page-number', function() {
        const page = $(this).data('page');
        showPage(page);
    });

    showPage(currentPage); // Show the first page initially
});
</script>





